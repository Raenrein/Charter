package com.ryan.taskManager;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/signin")
public class RequestController {

    @Autowired // This means to get the bean called userRepository
               // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping(path = "/register") // Map ONLY POST Requests
    public @ResponseBody String addNewUser(@RequestParam String name, @RequestParam String password,
            @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        User user = new User();
        if(user.getEmail()==null) {
            user.setUsername(name);
            user.setPassword(password);
            user.setEmail(email);
            userRepository.save(user);
            return "User " + name + " saved!";
        }
        return "User with this email already exists.";
    }

    @GetMapping(path = "/get/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @GetMapping(path = "/get/id")
    public @ResponseBody Optional<User> getUserById(int id) {
        return userRepository.findById(id);
    }


    // @PostMapping("/process")
    // public String processFormData(@RequestBody FormData formData) {
    // // Process the data or perform any backend tasks
    // // ...

    // // Return a response back to the frontend
    // return "{\"status\": \"success\", \"message\": \"Data received
    // successfully!\"}";
    // }
}
